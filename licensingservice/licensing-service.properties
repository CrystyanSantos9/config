example.property= I AM THE DEFAULT
spring.jpa.hibernate.ddl-auto=none
spring.jpa.database=POSTGRESQL
spring.datasource.platform=postgres
spring.jpa.show-sql = true
spring.jpa.hibernate.naming-strategy =org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.hibernate.dialect =org.hibernate.dialect.PostgreSQLDialect
spring.database.driverClassName= org.postgresql.Driver
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1
management.endpoints.web.exposure.include=*
management.endpoints.enabled-by-default=true

## ACTUATOR
## http://localhost:8080/actuator/health
management.security.enabled=false
management.health.circuitbreakers.enabled=true
management.endpoint.health.show-details=ALWAYS
management.endpoints.web.exposure.include=*
management.endpoints.enabled-by-default=true

#EUREKA ( SERVICE DISCOVERY )
eureka.instance.preferIpAddress = true
eureka.client.registerWithEureka = true 
eureka.client.fetchRegistry = true 
eureka.client.serviceUrl.defaultZone = http://localhost:8070/eureka/
encrypt.key=secretekey

##CIRCUIT BREAKER
### https://stackoverflow.com/questions/60528426/spring-boot-actuator-health-endpoint-dynamic-resilience4j-circuit-breakers
resilience4j.circuitbreaker.configs.default.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.licenseService.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.licenseService.ringBufferSizeInClosedState=5
resilience4j.circuitbreaker.instances.licenseService.ringBufferSizeInHalfOpenState=3
resilience4j.circuitbreaker.instances.licenseService.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.licenseService.failureRateThreshold=30
resilience4j.circuitbreaker.instances.licenseService.recordExceptions=org.springframework.web.client.HttpServerErrorException,java.io.IOException,  java.util.concurrent.TimeoutException, org.springframework.web.client.ResourceAccessException

##BULKHEAD PG 197
resilience4j.bulkhead.instances.bulkheadLicenseService.maxWaitDuration=10ms
resilience4j.bulkhead.instances.bulkheadLicenseService.maxConcurrentCalls=20
resilience4j.thread-pool-bulkhead.instances.bulkheadLicenseService.maxThreadPoolSize=1
resilience4j.thread-pool-bulkhead.instances.bulkheadLicenseService.coreThreadPoolSize=1
resilience4j.thread-pool-bulkhead.instances.bulkheadLicenseService.queueCapacity=1
resilience4j.thread-pool-bulkhead.instances.bulkheadLicenseService.keepAliveDuration=20ms
#
## RESILIENCE RETRY
resilience4j.retry.instances.retryLicenseService.maxRetryAttempts=5
resilience4j.retry.instances.retryLicenseService.waitDuration=10000
resilience4j.retry.instances.retryLicenseService.retry-exceptions=java.util.concurrent.TimeoutException
#
##Rate limit
resilience4j.ratelimiter.instances.licenseService.timeoutDuration=1000ms
resilience4j.ratelimiter.instances.licenseService.limitRefreshPeriod=5000
resilience4j.ratelimiter.instances.licenseService.limitForPeriod=5
#
#
#
#
#
##OPTMIZATION
spring.main.lazy-initialization=true
#logging.level.org.springframework.boot.autoconfigure=DEBUG
#
##LOGS
logging.level.org.springframework.web=WARN
logging.level.com.optimagrowth=DEBUG
#

